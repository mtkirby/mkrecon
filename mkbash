set -o vi
HOST=`/bin/uname -n 2>/dev/null || /usr/bin/uname -n 2>/dev/null`
if [ "$TERM" == "xterm" ];then
        PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOST}:${PWD}\007"'
fi
export HISTSIZE=100000
export HISTFILE=/dev/null
alias psa="ps axwwwo user,pid,ppid,pgid,state,tt,nice,%cpu,%mem,start,stat,command"
alias mv="mv -v"
alias rm="rm -v"
alias cp="cp -v"
alias ls='ls -FAb'
ls --help 2>&1 |grep -q BusyBox && alias ls='ls -Fa --color=never'
alias ll='ls -Fl'
alias l='ls -1'
alias lsl='ls -1'
alias myps="ps Haxwww -o uid,user,tt,pid,ppid,pgid,pcpu,pmem,nice,rss,start,stat,xstat,command"
alias s='sudo'

shopt -s dotglob

umask 022
if [ $USER == "root" ]; then
    export PS1='\n    ###  \u@\h  ?$?  &\j  \t  ###\n\w # '
    ulimit -u unlimited >/dev/null 2>&1
    ulimit -l unlimited >/dev/null 2>&1
    ulimit -i unlimited >/dev/null 2>&1
    ulimit -s unlimited >/dev/null 2>&1
    ulimit -q unlimited >/dev/null 2>&1
else
    export PS1='\n    ###  \u@\h  ?$?  &\j  \t  ###\n\w # '
fi

export VISUAL=vi
export EDITOR=vi
alias lynxie='lynx --useragent="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/6.0)" '
alias sc=systemctl
alias myltrace='ltrace -Sif '
alias mystrace='strace -fvTy '
alias dusk='du -sk * |sort -k1 -n'
which vim >/dev/null 2>&1 && alias vi=vim


function _mkprobe()
{
    mkdir /tmp/mkprobe >/dev/null 2>&1
    chmod 700 /tmp/mkprobe
    echo "OUTPUTING TO /tmp/mkprobe/mkprobe.output"

    echo "##################################################" 
    echo "# FINDING SETUID/SETGID"
    #find / -xdev -type f -perm /u=s,g=s -exec ls -ld {} \; 2>/dev/null
    #find / -type f \( -perm  -4000 -o -perm -2000 \) -exec ls -ld {} \;
    for dir in $(df -l |awk '{ if ($6 ~ /\// ) print $6}')
    do
        find $dir -xdev -type f \( -perm  -4000 -o -perm -2000 \) -exec ls -ld {} \;
    done


    echo "##################################################" 
    echo "# FINDING WORLD WRITABLE"
    #find / \( -type f -o -type d \) -perm -0002 -exec ls -ld {} \; 2>/dev/null
    for dir in $(df -l |awk '{ if ($6 ~ /\// ) print $6}')
    do
        find $dir -xdev \( -type f -o -type d \) -perm -0002 -exec ls -ld {} \; 2>/dev/null
    done

    echo "##################################################" 
    echo "# YPWHICH"
    if which ypwhich >/dev/null 2>&1 && ypwhich
    then
        echo "##################################################" 
        echo "# YPCAT PASSWD"
        ypcat -k passwd
        echo "##################################################" 
        echo "# YPCAT SHADOW.BYNAME"
        ypcat -k shadow.byname
    fi

    echo "##################################################" 
    echo "# SUDO -L"
    sudo -l

    echo "##################################################" 
    echo "# egrep --color=never -v '^#|^$' /etc/sudoers /etc/sudoers.d/* 2>/dev/null"
    egrep --color=never -v '^#|^$' /etc/sudoers /etc/sudoers.d/* 2>/dev/null

    echo "##################################################" 
    echo "# LOCAL USER HOMES/FILES"
    for i in $(cat /etc/passwd|cut -d':' -f6|sort|uniq)
    do 
        if [ -d $i ]
        then 
            ls -ld $i
        fi
    done
    for i in $(cat /etc/passwd|cut -d':' -f6|sort|uniq)
    do 
        if [ -d $i/.ssh ]
        then
            ls -la $i/.ssh
        fi
    done
    for a in .rhosts .shosts .cvspass .bash_history .mysql_history .psql_history .psqlrc .bashrc .bash_profile .profile .viminfo .nano_history
    do 
        for i in $(cat /etc/passwd|cut -d':' -f6|sort|uniq)
        do 
            if [ -f $i/$a ]
            then
                ls -ld $i/$a
            fi
        done
    done

    echo "##################################################" 
    echo "# NETSTAT -PEANUT LISTENERS"
    netstat -peanut 2>/dev/null |grep LISTEN || netstat -an |grep LISTEN

    echo "##################################################" 
    echo "# CRONJOBS"
    egrep --color=never -v '^#|^$' /etc/cron.d/* /etc/crontab /var/spool/cron/* /var/spool/cron/*/* 2>/dev/null

    echo "##################################################" 
    echo "# DF -AH"
    # look for nfs/smb
    df -ah

    echo "##################################################" 
    echo "# DOCKER PS"
    if which docker >/dev/null 2>&1
    then
        echo "##################################################" 
        echo "# GETENT GROUP DOCKER"
        getent group docker
    fi

    echo "##################################################" 
    echo "# FILES OF RUNNING PROCESSES"
    for i in /proc/*/cmdline
    do 
        local exe=$(cat $i|tr '\0' ' '|cut -d':' -f1|awk '{print $1}')
        if [ -e $exe ]
            then ls -ld $exe 2>/dev/null
        fi
    done |sort|uniq

    echo "##################################################" 
    echo "# FIND HTPASSWD FILES"
    find / /usr /usr/local /var /opt -xdev -name .htpasswd 2>/dev/null

    echo "##################################################" 
    echo "# APACHE AUTHUSERFILE LOCATIONS"
    find /etc /opt/*apache* /usr/local/*apache* -type f -exec grep -i AuthUserFile {} \; 2>/dev/null

    echo "##################################################" 
    echo "# COMMUNITY IN SNMP.CONF"
    find /etc -type f -iname '*snmp*' -exec grep -i community {} \; 2>/dev/null
    
    echo "##################################################" 
    echo "# MYSQL USER DB FILES"
    find /var/lib/mysql -type f -iname '*user*' -exec ls -ld {} \; 2>/dev/null
    for file in $(find /var/lib/mysql -type f -iname 'user.MYD')
    do
        echo "HASHES FROM $file"
        strings -a "$file"
    done

    echo "##################################################" 
    echo "# IPTABLES-SAVE"
    iptables-save 2>/dev/null

    echo "##################################################" 
    echo "# IP6TABLES-SAVE"
    ip6tables-save 2>/dev/null

    echo "##################################################" 
    echo "# FIND PASSW FILES"
    echo "# OUTPUT TO /tmp/mkprobe/passwfiles"
    find /etc /var /opt /usr -type f -iname '*passw*' -exec ls -ld {} \;  2>/dev/null |egrep -v '/usr/share/|/usr/include|/usr/sbin|/usr/bin|.pyc$|.html$|.so$' >>/tmp/mkprobe/passwfiles 2>&1

    echo "##################################################" 
    echo "# PASSW IN /ETC FILES"
    echo "# OUTPUT TO /tmp/mkprobe/etcpassw"
    find /etc -type f -exec grep -i passw {} \; >>/tmp/mkprobe/etcpassw 2>/dev/null 

    echo "##################################################" 
    echo "# FIND ORAPWORCL FILES AND DUMP HASHES"
    echo "# OUTPUT TO /tmp/mkprobe/orapworcl"
    # https://laurent-leturgez.com/2017/12/15/brute-forcing-the-oracle-password-file/
    # https://github.com/lolo115/oracrack
    for i in $(find /etc /opt/ora* /home -type f -name orapworcl)
    do
        echo "If 10g, sys hash is second field" >>/tmp/mkprobe/orapworcl
        xxd -c16 -g0 -s +0x0484 -l 16 "$i" >>/tmp/mkprobe/orapworcl 2>&1

        echo "If 11g, sys hash is first field" >>/tmp/mkprobe/orapworcl
        xxd -c30 -g0 -s +0x04ac -l 30 "$i" >>/tmp/mkprobe/orapworcl 2>&1

        echo "First part, 20 first bytes, SHA1 digest" >>/tmp/mkprobe/orapworcl
        xxd -c20 -g0 -s +0x04ac -l 20 "$i" >>/tmp/mkprobe/orapworcl 2>&1

        echo "Second part, 10 next bytes, Salt" >>/tmp/mkprobe/orapworcl
        xxd -c10 -g0 -s +0x4C0  -l 10 "$i" >>/tmp/mkprobe/orapworcl 2>&1

        echo "If 12c, sys hash is first field" >>/tmp/mkprobe/orapworcl
        xxd -c80 -g0 -s +0x04CA -l 80 "$i" >>/tmp/mkprobe/orapworcl 2>&1
    done

    echo "##################################################" 
    echo "# OUTPUT /proc/*/environ"
    echo "# OUTPUT TO /tmp/mkprobe/environ"
    cat /proc/*/environ |tr '\0' '\n'|sort -u >>/tmp/mkprobe/environ

    if which yum >/dev/null 2>&1
    then
        echo "##################################################" 
        echo "# Show CVEs"
        yum updateinfo list cves
    fi  

    echo "##################################################" 
    echo "GOTO /tmp/mkprobe"
}

function mkprobe()
{
    mkdir /tmp/mkprobe >/dev/null 2>&1
    chmod 700 /tmp/mkprobe
    _mkprobe |tee /tmp/mkprobe/mkprobe.output
}


function dumpRpmCVEs()
{
    if which rpm >/dev/null 2>&1
    then
        rpm -qa --changelog |grep 'CVE-'|sed -e 's/ /\n/g' |sed -e 's/,/\n/g'|grep 'CVE-' |sed -e 's/.*\(CVE-[0-9]*-[0-9]*\).*/\1/g' |sort -u > /tmp/RPMCVEs
    fi
}

function dumpPackages()
{
    local pkg
    local name
    local version
    local IFS=$'\n'
    rm -f /tmp/searchsploit >/dev/null 2>&1
    if which rpm >/dev/null 2>&1
    then
        for pkg in $(rpm -qa|sort)
        do 
            name=$(rpm -qi $pkg |awk '/^Name / {print $3}'|head -1 )
            version=$(rpm -qi $pkg |awk '/^Version / {print $3}'|head -1)
            echo "$name $version" >> /tmp/searchsploit
        done
    fi
    if which dpkg >/dev/null 2>&1
    then
        dpkg -l |awk '/^ii/ {print $2" " $3}' |sed -e 's/ [[:digit:]]:/ /g' |sed -e 's/\+.*//g' |sed -e 's/-[[:digit:]].*//g' |sort |uniq >> /tmp/searchsploit
    fi
    if which apk >/dev/null 2>&1
    then
        apk -vv info |awk '{print $1}' |sed -e 's/\(.*\)-\([0-9].*\)-.*/\1 \2/' |sort |uniq >> /tmp/searchsploit
    fi
    if which opkg >/dev/null 2>&1
    then
        for pkg in $(opkg info |awk '/Package: / {print $2}' |sort|uniq)
        do 
            version=$(opkg info $pkg|awk '/Version: / {print $2}'|sed -e 's/\(.*\)-.*/\1/')
            echo "$pkg $version" >> /tmp/searchsploit
        done
    fi
    if which pkg >/dev/null 2>&1 && uname -s 2>/dev/null |grep -qi freebsd
    then
        for pkg in $(pkg info |awk '{print $1}' |sort|uniq)
        do 
            name=$(pkg info $pkg |awk '/^Name/ {print $3}')
            version=$(pkg info $pkg|awk '/^Version/ {print $3}' |cut -d'_' -f1)
            echo "$name $version" >> /tmp/searchsploit
        done
    fi
    if which pkg >/dev/null 2>&1 && uname -s 2>/dev/null |grep -qi sunos
    then
        for pkg in $(pkg list |awk '{print $1}' |sort|uniq)
        do 
            name=$(pkg info $pkg |awk '/Name:/ {print $2}' |sed -e 's|.*/\(.*\)|\1|')
            version=$(pkg info $pkg|awk '/Version:/ {print $2}')
            echo "$name $version" >> /tmp/searchsploit
        done
    fi

    if [[ -f /tmp/searchsploit ]]
    then
        echo "Found packages.  Now copy /tmp/searchsploit to attack host and run localsearchsploit"
    fi
}

# This function finds files that do not belong to packages.
# It should show files that are created by the admin(s) that may be interesting
function nonpkgcheck()
{
    local IFS=$'\n'
    declare -A pkgfiles
    local pkg
    local dir
    local file

    dirs=(/etc /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin)

    if which rpm >/dev/null 2>&1
    then
        for pkg in $(rpm -qa 2>/dev/null)
        do
            for file in $(rpm -qil "$pkg" |egrep '^/etc/|^/bin/|^/sbin/|^/usr/bin/|^/usr/sbin/|^/usr/local/bin/|^/usr/local/sbin/' )
            do
                pkgfiles["${file##*/}"]=1
            done
        done
    fi

    if which dpkg >/dev/null 2>&1
    then
        for pkg in $(dpkg -l |awk '/^[phuri]/ {print $2}' 2>/dev/null)
        do
            for file in $(dpkg -L "$pkg" |egrep '^/etc/|^/bin/|^/sbin/|^/usr/bin/|^/usr/sbin/|^/usr/local/bin/|^/usr/local/sbin/' )
            do
                pkgfiles["${file##*/}"]=1
            done
        done
    fi

    if which apk >/dev/null 2>&1
    then
        for pkg in $(apk info)
        do
            for file in $(apk info -L "$pkg" |egrep '^etc|^bin/|^sbin/|^usr/bin/|^usr/sbin/|^usr/local/bin/|/usr/local/sbin/' )
            do
                pkgfiles["${file##*/}"]=1
            done
        done
    fi

    for dir in "${dirs[@]}"
    do
        for file in "$dir"/*
        do
            file=$(readlink -f "$file")
            if [[ -f "$file" ]] \
            && [[ ! ${pkgfiles["${file##*/}"]} == 1 ]] \
            && [[ ! "$file" =~ /etc/alternatives ]] \
            && ! rpm -qif "$file" >/dev/null 2>&1 \
            && ! dpkg -S "$file" >/dev/null 2>&1
            then
                'ls' -l "$file"
            fi
        done
    done

}

